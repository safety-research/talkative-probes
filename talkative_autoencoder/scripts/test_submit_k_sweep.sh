#!/bin/bash
# Test examples for submit_k_sweep.sh

echo "=== K-Sweep SLURM Submission Examples ==="
echo ""
echo "1. Single-GPU evaluation with default settings:"
echo "   ./scripts/submit_k_sweep.sh \\"
echo "     +eval.checkpoint_path=outputs/5M_L5_SimpleStories_lr1e-4_t10_1222_1430/JL_B14_L5_SIMPLE_OJ_IT_E_D_WILD_OTF_dist8/checkpoint_step399999_epoch240_final.pt \\"
echo "     +eval.k_values=[1,2,4,8,16,32]"
echo ""
echo "2. Multi-GPU distributed evaluation (4 GPUs):"
echo "   ./scripts/submit_k_sweep.sh num_gpus=4 \\"
echo "     +eval.checkpoint_path=outputs/5M_L5_SimpleStories_lr1e-4_t10_1222_1430/JL_B14_L5_SIMPLE_OJ_IT_E_D_WILD_OTF_dist8/checkpoint_step399999_epoch240_final.pt \\"
echo "     +eval.k_values=[1,2,4,8,16,32,64] \\"
echo "     +eval.max_batches=100"
echo ""
echo "3. Full node evaluation (8 GPUs) with caching:"
echo "   ./scripts/submit_k_sweep.sh num_gpus=8 time=48:00:00 \\"
echo "     +eval.checkpoint_path=outputs/5M_L5_SimpleStories_lr1e-4_t10_1222_1430/JL_B14_L5_SIMPLE_OJ_IT_E_D_WILD_OTF_dist8/checkpoint_step399999_epoch240_final.pt \\"
echo "     +eval.k_values=[1,2,4,8,16,32,64,128] \\"
echo "     +eval.load_store=true \\"
echo "     +eval.cache_dir=vector_cache_full"
echo ""
echo "4. Nice job (low priority, requeueable) with custom settings:"
echo "   ./scripts/submit_k_sweep.sh nice=true num_gpus=2 \\"
echo "     +eval.checkpoint_path=outputs/checkpoint.pt \\"
echo "     +eval.k_values=[1,4,16,64] \\"
echo "     +eval.temperature=1.2 \\"
echo "     +eval.do_bootstrap=false"
echo ""
echo "5. Force direct execution (no SLURM):"
echo "   ./scripts/submit_k_sweep.sh force_direct=true \\"
echo "     +eval.checkpoint_path=outputs/checkpoint.pt \\"
echo "     +eval.k_values=[1,2,4]"
echo ""
echo "6. Custom partition and job name:"
echo "   ./scripts/submit_k_sweep.sh partition=gpu_long job_name=gemma_k_sweep \\"
echo "     +eval.checkpoint_path=outputs/gemma_checkpoint.pt \\"
echo "     +eval.k_values=[1,2,4,8,16,32]"
echo ""
echo "=== Vector Caching Workflow ==="
echo ""
echo "Step 1: Cache vectors from full dataset (long job):"
echo "   ./scripts/submit_k_sweep.sh num_gpus=8 time=24:00:00 \\"
echo "     +eval.checkpoint_path=outputs/checkpoint.pt \\"
echo "     +eval.k_values=[1] \\"  # Just K=1 to extract vectors
echo "     +eval.load_store=true \\"
echo "     +eval.cache_dir=vector_cache_full \\"
echo "     +eval.max_batches=null"  # Process entire dataset
echo ""
echo "Step 2: Run multiple K-sweep experiments using cached vectors:"
echo "   # Experiment 1: Temperature sweep"
echo "   for temp in 0.8 1.0 1.2; do"
echo "     ./scripts/submit_k_sweep.sh num_gpus=4 \\"
echo "       +eval.checkpoint_path=outputs/checkpoint.pt \\"
echo "       +eval.k_values=[1,2,4,8,16,32,64] \\"
echo "       +eval.temperature=\$temp \\"
echo "       +eval.load_store=true \\"
echo "       +eval.cache_dir=vector_cache_full \\"
echo "       +eval.output_file=k_sweep_temp_\${temp}.json"
echo "   done"
echo ""
echo "=== Monitoring and Results ==="
echo "- Monitor jobs: squeue -u \$USER"
echo "- View logs: tail -f logs/k_sweep_*.out"
echo "- Results saved to: eval_results/"
echo "- Plot results: source scripts/ensure_env.sh && uv run python eval_results/plot_k_sweep.py"