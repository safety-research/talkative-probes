[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "talkative-autoencoder-backend"
version = "0.1.0"
description = "Web API backend for Talkative Autoencoder (Consistency Lens)"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "kitft"},
]
keywords = ["machine-learning", "nlp", "api", "fastapi", "autoencoder"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core web framework
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "websockets>=12.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # Async support
    "asyncio>=3.4.3",
    "uvloop>=0.19.0",  # Performance boost for asyncio
    
    # ML dependencies (versions should match main project)
    "torch>=2.1.0",
    "transformers>=4.36.0",
    "pandas>=2.1.4",
    "numpy>=1.24.3",
    
    # Utilities
    "python-dotenv>=1.0.0",
    "python-json-logger>=2.0.7",
    "slowapi>=0.1.9",  # Rate limiting
    
    # Optional dependencies for production
    "redis>=5.0.1",
    "hiredis>=2.2.3",  # C extension for redis performance
    "prometheus-client>=0.19.0",  # Metrics
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.2",
    
    # Code quality
    "black>=23.11.0",
    "ruff>=0.1.6",
    "mypy>=1.7.0",
    
    # Documentation
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.0",
]

test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.2",
]

[project.urls]
Homepage = "https://github.com/kitft/talkative-probes"
Repository = "https://github.com/kitft/talkative-probes"
Documentation = "https://github.com/kitft/talkative-probes/tree/main/talkative_autoencoder/website"

[tool.setuptools]
packages = ["app"]

[tool.setuptools.package-data]
app = ["*.json", "*.yaml", "*.yml"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--tb=short",
    "-v",
    "--strict-markers",
    "--asyncio-mode=auto",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.black]
line-length = 120
target-version = ['py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

[tool.ruff]
line-length = 120
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101"]  # assert allowed in tests

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
exclude = [
    "tests/",
    "build/",
    "dist/",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]